
# This file was generated by the Tkinter Designer by Parth Jadhav
# https://github.com/ParthJadhav/Tkinter-Designer


from pathlib import Path

# from tkinter import *
# Explicit imports to satisfy Flake8
from tkinter import Tk, Canvas, Entry, Text, Button, PhotoImage, ttk
from matplotlib.backends.backend_tkagg import FigureCanvasTkAgg
from matplotlib.figure import Figure
import pandas as pd
from data import *

OUTPUT_PATH = Path(__file__).parent
ASSETS_PATH = OUTPUT_PATH / Path(r"C:\Users\zenyi\Documents\Python\pythonProject1\build\assets\frame0")


def relative_to_assets(path: str) -> Path:
    return ASSETS_PATH / Path(path)


window = Tk()

window.geometry("1000x550")
window.configure(bg = "#045C76")


canvas = Canvas(
    window,
    bg = "#045C76",
    height = 550,
    width = 1000,
    bd = 0,
    highlightthickness = 0,
    relief = "ridge"
)

canvas.place(x = 0, y = 0)
canvas.create_rectangle(
    0.0,
    0.0,
    1000.0,
    72.0,
    fill="#1CC0D8",
    outline="")

canvas.create_text(
    99.0,
    22.0,
    anchor="nw",
    text="Zephyrus Huntington",
    fill="#000000",
    font=("Inter Bold", 30 * -1)
)

image_image_1 = PhotoImage(
    file=relative_to_assets("image_1.png"))
image_1 = canvas.create_image(
    162.0,
    163.0,
    image=image_image_1
)

image_image_2 = PhotoImage(
    file=relative_to_assets("image_2.png"))
image_2 = canvas.create_image(
    162.0,
    373.0,
    image=image_image_2
)

image_image_3 = PhotoImage(
    file=relative_to_assets("image_3.png"))
image_3 = canvas.create_image(
    500.0,
    373.0,
    image=image_image_3
)

image_image_4 = PhotoImage(
    file=relative_to_assets("image_4.png"))
image_4 = canvas.create_image(
    838.0,
    373.0,
    image=image_image_4
)

image_image_5 = PhotoImage(
    file=relative_to_assets("image_5.png"))
image_5 = canvas.create_image(
    65.0,
    144.0,
    image=image_image_5
)

image_image_6 = PhotoImage(
    file=relative_to_assets("image_6.png"))
image_6 = canvas.create_image(
    500.0,
    163.0,
    image=image_image_6
)

image_image_7 = PhotoImage(
    file=relative_to_assets("image_7.png"))
image_7 = canvas.create_image(
    838.0,
    163.0,
    image=image_image_7
)

canvas.create_text(
    78.0,
    140.0,
    anchor="nw",
    text="Methane",
    fill="#F5F5F5",
    font=("Inter Bold", 15 * -1)
)

canvas.create_text(
    413.0,
    140.0,
    anchor="nw",
    text="Cattle Count",
    fill="#F5F5F5",
    font=("Inter Bold", 15 * -1)
)

canvas.create_text(
    751.0,
    140.0,
    anchor="nw",
    text="Food consumed",
    fill="#F5F5F5",
    font=("Inter Bold", 15 * -1)
)

canvas.create_text(
    57.0,
    163.0,
    anchor="nw",
    text="654 ppm",
    fill="#F5F5F5",
    font=("Inter Bold", 22 * -1)
)

canvas.create_text(
    398.0,
    162.0,
    anchor="nw",
    text="4",
    fill="#F5F5F5",
    font=("Inter Bold", 22 * -1)
)

canvas.create_text(
    733.0,
    163.0,
    anchor="nw",
    text="45 kg",
    fill="#F5F5F5",
    font=("Inter Bold", 22 * -1)
)

canvas.create_text(
    230.0,
    144.0,
    anchor="nw",
    text="5.8%",
    fill="#EB3223",
    font=("Inter Bold", 20 * -1)
)

canvas.create_text(
    568.0,
    144.0,
    anchor="nw",
    text="0%",
    fill="#FFFFFF",
    font=("Inter Bold", 20 * -1)
)

canvas.create_text(
    906.0,
    144.0,
    anchor="nw",
    text="8.9%",
    fill="#4AE28E",
    font=("Inter Bold", 20 * -1)
)

canvas.create_text(
    200.0,
    166.0,
    anchor="nw",
    text="past week 4.7%\n",
    fill="#FFFFFF",
    font=("Inter Bold", 10 * -1)
)

canvas.create_text(
    536.0,
    166.0,
    anchor="nw",
    text="past week 0%\n",
    fill="#FFFFFF",
    font=("Inter Bold", 10 * -1)
)

canvas.create_text(
    874.0,
    166.0,
    anchor="nw",
    text="past week 11.9%\n",
    fill="#FFFFFF",
    font=("Inter Bold", 10 * -1)
)

image_image_8 = PhotoImage(
    file=relative_to_assets("image_8.png"))
image_8 = canvas.create_image(
    732.0,
    144.0,
    image=image_image_8
)

image_image_9 = PhotoImage(
    file=relative_to_assets("image_9.png"))
image_9 = canvas.create_image(
    400.0,
    143.0,
    image=image_image_9
)

image_image_10 = PhotoImage(
    file=relative_to_assets("image_10.png"))
image_10 = canvas.create_image(
    212.0,
    156.0,
    image=image_image_10
)

image_image_11 = PhotoImage(
    file=relative_to_assets("image_11.png"))
image_11 = canvas.create_image(
    57.0,
    39.0,
    image=image_image_11
)

image_image_12 = PhotoImage(
    file=relative_to_assets("image_12.png"))
image_12 = canvas.create_image(
    886.0,
    156.0,
    image=image_image_12
)

emissions_data = pd.DataFrame(emissions)
emissions_data["date"] = pd.to_datetime(emissions_data["date"])

# Create the figure and add a plot to it
fig_1 = Figure(figsize=(2.5, 2.2), facecolor="#1EA1EB")
ax_1 = fig_1.add_subplot()
# Add background color
ax_1.set_facecolor("#1EA1EB")
# add the data to the subplot
ax_1.fill_between(x=emissions_data["date"], y1=emissions_data["amount"], alpha=0.75, color="white")
# Make labels smaller
ax_1.tick_params(labelsize=7, colors="white")
# Rotate dates so you are able to see them
fig_1.autofmt_xdate()
# Add a line of color at the top of teh graph to better be able to see trends
ax_1.plot(emissions_data["date"], emissions_data["amount"], color="midnightblue")
ax_1.grid(visible=True)

canvas = FigureCanvasTkAgg(figure=fig_1, master=window)
canvas.draw()
canvas.get_tk_widget().place(x=40, y= 220)


# Creating Circular chart for food, same logic as above just different projection and data
fig_2 = Figure(figsize=(2.5,2.2), facecolor="#1EA1EB")
ax_2 = fig_2.add_subplot(projection="polar")
ax_2.set_facecolor("#1EA1EB")
ax_2.bar(x=cattle["angles"], height=cattle["emissions"], color=cattle["colors"])
ax_2.set_frame_on(False)
ax_2.set_xticks([])
ax_2.tick_params(labelsize=2, colors="white")
ax_2.grid(alpha=0.7)

for angle, label, rotation in zip(cattle["angles"], cattle["products"], cattle["rotation"]):
    ax_2.text(x=angle, y=max(cattle["emissions"]) + 30, s=label, rotation=rotation, ha="center", va="center", color="white", fontsize=8)

canvas = FigureCanvasTkAgg(figure= fig_2, master=window)
canvas.draw()
canvas.get_tk_widget().place(x=710, y = 220)

# Table data
table = ttk.Treeview(master=window, columns=table_columns, show="headings")

for column in table_columns:
    table.heading(column=column, text=column)
    table.column(column=column, width = 70)

for row_data in table_data:
    table.insert(parent="", index="end", values=row_data)

style= ttk.Style()
style.theme_use("default")
style.configure("Treeview", background="#1EA1EB", fieldbackground="#1EA1EB", foreground="white")
style.configure("Treeview.Heading", background="#1EA1EB", fieldbackground="#1EA1EB", foreground="white")
style.map("Treeview", background=[("selected", "#1CC0D8")])

table.place(x=395, y=225, height=260)

window.resizable(False, False)
window.mainloop()
